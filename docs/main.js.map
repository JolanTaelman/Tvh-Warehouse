{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/warehouse.service.ts","./src/app/warehouse/warehouse.component.ts","./src/app/warehouse/warehouse.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tvh-frontend';\n}\n","<app-warehouse></app-warehouse>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatTableModule, } from '@angular/material/table';\nimport { MatButtonModule, } from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatDividerModule} from '@angular/material/divider';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WarehouseComponent } from './warehouse/warehouse.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WarehouseComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatCardModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatBadgeModule,\n    MatDividerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Warehouse } from '../model/warehouse.model';\nimport { Observable, of, } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n  private warehouseUrl = 'https://tvh-backend.herokuapp.com';\n\n  constructor(private http: HttpClient) { }\n\n  getWarehouses(): Observable<Warehouse[]> {\n    const url = `${this.warehouseUrl}/warehouses`;\n    return this.http.get<Warehouse[]>(url).pipe(map((data) => {\n      data.sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n      });\n      return data;\n    }));\n  }\n\n  getWarehouse(id: string): Observable<Warehouse> {\n    const url = `${this.warehouseUrl}/${id}`;\n    return this.http.get<Warehouse>(url);\n  }\n\n  moveItemToWarehouse(warehouseId: string, itemId: string): Promise<object> {\n    const url = `${this.warehouseUrl}/warehouses/${warehouseId}/${itemId}`;\n    return this.http.post(url, {}).toPromise();\n  }\n\n  getEmptyCapacity(): Observable<any> {\n    const url = `${this.warehouseUrl}/capacity`;\n    return this.http.get(url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { WarehouseService } from '../services/warehouse.service';\nimport { Warehouse } from '../model/warehouse.model';\n\n@Component({\n  selector: 'app-warehouse',\n  templateUrl: './warehouse.component.html',\n  styleUrls: ['./warehouse.component.css']\n})\nexport class WarehouseComponent implements OnInit {\n  CapacityColumns: string[] = ['Name', 'Capacity'];\n  ItemColums: string[] = ['Name', 'Transfer'];\n\n  warehouses: Warehouse[];\n  capacity: any;\n  selected = null;\n\n  constructor(private warehouseService: WarehouseService) {\n  }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n    this.getEmptyCapacity();\n  }\n  getWarehouses(): void {\n    this.warehouseService.getWarehouses().subscribe(warehouses => this.warehouses = warehouses);\n  }\n  getEmptyCapacity(): void {\n    this.warehouseService.getEmptyCapacity().subscribe((capacity) => {\n      this.capacity = capacity;\n    });\n  }\n\n\n  moveItemToWarehouse(warehouseId: string, itemId: string): void {\n    if (this.selected) {\n      this.warehouseService.moveItemToWarehouse(warehouseId, itemId).then(() => {\n        this.getWarehouses();\n      });\n    }\n    else {\n      console.log('No destination selected');\n    }\n  }\n}\n","\n<div class=\"main\">\n    <mat-card>\n        <mat-toolbar color=\"primary\">\n            <mat-toolbar-row>\n                <div class=\"title\">Jolan Taelman - Warehouse Display Tool</div>\n            </mat-toolbar-row>\n        </mat-toolbar>\n        <mat-tab-group>\n            <mat-tab *ngFor=\"let warehouse of warehouses\" label=\"{{warehouse.name}}\">\n                <div class=\"tabcontent\">\n                    <div class=\"warehouseStats\">\n                        <mat-card class=\"warehouseCard BigFont\">\n                            <mat-card-header>\n                                <mat-card-subtitle>Warehouse Capacity</mat-card-subtitle>\n                            </mat-card-header>\n                            {{warehouse.capacity}}\n                        </mat-card>\n                        <mat-card class=\"warehouseCard BigFont\">\n                            <mat-card-header>\n                                <mat-card-subtitle>Available capacity:</mat-card-subtitle>\n                            </mat-card-header>\n                            {{warehouse.capacity - warehouse.items.length}}\n                        </mat-card>\n                        <mat-card class=\"warehouseCard BigFont\">\n                            <mat-card-header>\n                                <mat-card-subtitle>Stock</mat-card-subtitle>\n                            </mat-card-header>{{warehouse.items.length}}\n                        </mat-card>\n                        <mat-card class=\"warehouseCard\">\n                            <mat-card-header>\n                                <mat-card-subtitle>Transfer Destination</mat-card-subtitle>\n                            </mat-card-header>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>Select an option</mat-label>\n                                <mat-select [(value)]=\"selected\">\n                                    <ng-container *ngFor=\"let item of warehouses\">\n                                        <mat-option *ngIf=\"item != warehouse\" value=\"{{item._id}}\">{{item.name}}\n                                        </mat-option>\n                                    </ng-container>\n                                </mat-select>\n                            </mat-form-field>\n                        </mat-card>\n                    </div>\n                    <div class=\"itemList\">\n                        <table mat-table [dataSource]=\"warehouse.items\" class=\"mat-elevation-z8\">\n                            <ng-container matColumnDef=\"Name\">\n                                <th mat-header-cell *matHeaderCellDef> Name </th>\n                                <td mat-cell *matCellDef=\"let item\"> {{item.name}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Transfer\">\n                                <th mat-header-cell *matHeaderCellDef> </th>\n                                <td mat-cell *matCellDef=\"let item\">\n                                    <button mat-stroked-button color=\"primary\"\n                                        (click)=\"moveItemToWarehouse(selected, item._id)\">Transfer</button>\n                                </td>\n                            </ng-container>\n                            <tr mat-header-row *matHeaderRowDef=\"ItemColums\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: ItemColums;\"></tr>\n                        </table>\n                    </div>\n                </div>\n            </mat-tab>\n\n        </mat-tab-group>\n        <mat-accordion>\n            <mat-expansion-panel hideToggle>\n                <mat-expansion-panel-header>\n                    <mat-panel-title class=\"title\">\n                        Total free capacity: &nbsp;&nbsp; <b>{{capacity.capacity}}</b>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <table mat-table [dataSource]=\"capacity.warehouses\" class=\"mat-elevation-z8\">\n                    <ng-container matColumnDef=\"Name\">\n                        <th mat-header-cell *matHeaderCellDef>Name</th>\n                        <td mat-cell *matCellDef=\"let item\"> {{item.name}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"Capacity\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let item\">{{item.space}}</td>\n                    </ng-container>\n                    <tr mat-header-row *matHeaderRowDef=\"CapacityColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: CapacityColumns;\"></tr>\n                </table>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}